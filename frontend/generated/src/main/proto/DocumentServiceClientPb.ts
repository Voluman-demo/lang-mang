/**
 * @fileoverview gRPC-Web generated client stub for 
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v3.20.3
// source: src/main/proto/document.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as src_main_proto_document_pb from '../../../src/main/proto/document_pb'; // proto import: "src/main/proto/document.proto"
import * as google_protobuf_empty_pb from 'google-protobuf/google/protobuf/empty_pb'; // proto import: "google/protobuf/empty.proto"


export class DocumentServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorAddDocument = new grpcWeb.MethodDescriptor(
    '/DocumentService/AddDocument',
    grpcWeb.MethodType.UNARY,
    src_main_proto_document_pb.DocumentAddRequest,
    src_main_proto_document_pb.DocumentResponse,
    (request: src_main_proto_document_pb.DocumentAddRequest) => {
      return request.serializeBinary();
    },
    src_main_proto_document_pb.DocumentResponse.deserializeBinary
  );

  addDocument(
    request: src_main_proto_document_pb.DocumentAddRequest,
    metadata?: grpcWeb.Metadata | null): Promise<src_main_proto_document_pb.DocumentResponse>;

  addDocument(
    request: src_main_proto_document_pb.DocumentAddRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: src_main_proto_document_pb.DocumentResponse) => void): grpcWeb.ClientReadableStream<src_main_proto_document_pb.DocumentResponse>;

  addDocument(
    request: src_main_proto_document_pb.DocumentAddRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: src_main_proto_document_pb.DocumentResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/DocumentService/AddDocument',
        request,
        metadata || {},
        this.methodDescriptorAddDocument,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/DocumentService/AddDocument',
    request,
    metadata || {},
    this.methodDescriptorAddDocument);
  }

  methodDescriptorGetAllDocuments = new grpcWeb.MethodDescriptor(
    '/DocumentService/GetAllDocuments',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    src_main_proto_document_pb.GetDocumentsResponse,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    src_main_proto_document_pb.GetDocumentsResponse.deserializeBinary
  );

  getAllDocuments(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata | null): Promise<src_main_proto_document_pb.GetDocumentsResponse>;

  getAllDocuments(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: src_main_proto_document_pb.GetDocumentsResponse) => void): grpcWeb.ClientReadableStream<src_main_proto_document_pb.GetDocumentsResponse>;

  getAllDocuments(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: src_main_proto_document_pb.GetDocumentsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/DocumentService/GetAllDocuments',
        request,
        metadata || {},
        this.methodDescriptorGetAllDocuments,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/DocumentService/GetAllDocuments',
    request,
    metadata || {},
    this.methodDescriptorGetAllDocuments);
  }

  methodDescriptorDownloadFile = new grpcWeb.MethodDescriptor(
    '/DocumentService/DownloadFile',
    grpcWeb.MethodType.UNARY,
    src_main_proto_document_pb.DownloadFileRequest,
    src_main_proto_document_pb.DownloadFileResponse,
    (request: src_main_proto_document_pb.DownloadFileRequest) => {
      return request.serializeBinary();
    },
    src_main_proto_document_pb.DownloadFileResponse.deserializeBinary
  );

  downloadFile(
    request: src_main_proto_document_pb.DownloadFileRequest,
    metadata?: grpcWeb.Metadata | null): Promise<src_main_proto_document_pb.DownloadFileResponse>;

  downloadFile(
    request: src_main_proto_document_pb.DownloadFileRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: src_main_proto_document_pb.DownloadFileResponse) => void): grpcWeb.ClientReadableStream<src_main_proto_document_pb.DownloadFileResponse>;

  downloadFile(
    request: src_main_proto_document_pb.DownloadFileRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: src_main_proto_document_pb.DownloadFileResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/DocumentService/DownloadFile',
        request,
        metadata || {},
        this.methodDescriptorDownloadFile,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/DocumentService/DownloadFile',
    request,
    metadata || {},
    this.methodDescriptorDownloadFile);
  }

  methodDescriptorCheckOutdatedDocuments = new grpcWeb.MethodDescriptor(
    '/DocumentService/CheckOutdatedDocuments',
    grpcWeb.MethodType.UNARY,
    src_main_proto_document_pb.CheckOutdatedDocumentsRequest,
    src_main_proto_document_pb.CheckOutdatedDocumentsResponse,
    (request: src_main_proto_document_pb.CheckOutdatedDocumentsRequest) => {
      return request.serializeBinary();
    },
    src_main_proto_document_pb.CheckOutdatedDocumentsResponse.deserializeBinary
  );

  checkOutdatedDocuments(
    request: src_main_proto_document_pb.CheckOutdatedDocumentsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<src_main_proto_document_pb.CheckOutdatedDocumentsResponse>;

  checkOutdatedDocuments(
    request: src_main_proto_document_pb.CheckOutdatedDocumentsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: src_main_proto_document_pb.CheckOutdatedDocumentsResponse) => void): grpcWeb.ClientReadableStream<src_main_proto_document_pb.CheckOutdatedDocumentsResponse>;

  checkOutdatedDocuments(
    request: src_main_proto_document_pb.CheckOutdatedDocumentsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: src_main_proto_document_pb.CheckOutdatedDocumentsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/DocumentService/CheckOutdatedDocuments',
        request,
        metadata || {},
        this.methodDescriptorCheckOutdatedDocuments,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/DocumentService/CheckOutdatedDocuments',
    request,
    metadata || {},
    this.methodDescriptorCheckOutdatedDocuments);
  }

}

